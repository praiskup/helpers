#! /bin/bash -x

# Prepare Fedora Cloud image for eimg-update.
# Copyright (C) 2015 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

opt_image="$1"

dir=$(mktemp -d "/tmp/$(id -n -u)-eimg-XXXXXX")
test -z "$dir" && exit 1
echo >&2 "using $dir"

cleanup()
{
    rm -rf "$dir"
}
trap cleanup EXIT

part=sda1
case $(uname -m) in
    ppc64le)
        part=sda2
        ;;
esac

eimg-podman-guestfish -a "$opt_image" <<EOF
run
#mount /dev/$part /
mount btrfsvol:/dev/sda5/root /
copy-out /etc/ssh/sshd_config $dir
!sed -i -e "s/^PasswordAuthentication.*/PasswordAuthentication yes/" -e "s/#\\?PermitRootLogin.*/PermitRootLogin yes/" $dir/sshd_config
copy-in $dir/sshd_config /etc/ssh
chown 0 0 /etc/ssh/sshd_config
chmod 0600 /etc/ssh/sshd_config

copy-in @eimgfilesdir@/keep-one-kernel.sh /usr/bin
chmod 0755 /usr/bin/keep-one-kernel.sh

# etc shadow
copy-out /etc/shadow $dir
!@libexecdir@/eimg-fix-shadow $dir/shadow
copy-in $dir/shadow /etc
chmod 0000 /etc/shadow
chown 0 0 /etc/shadow

# cloud-init config
copy-out /etc/cloud/cloud.cfg $dir
!@libexecdir@/eimg-fix-cloud-init $dir/cloud.cfg
copy-in $dir/cloud.cfg /etc/cloud
chown 0 0 /etc/cloud/cloud.cfg
chmod 0644 /etc/cloud/cloud.cfg

# libvirt custom config drive
write        /etc/rc.d/rc.local "#! /bin/sh\n"
write-append /etc/rc.d/rc.local "set -x\n"
write-append /etc/rc.d/rc.local "set -e\n"
write-append /etc/rc.d/rc.local "touch /eimg-config-tried\n"
write-append /etc/rc.d/rc.local "test -e /dev/sr0 || exit 0\n"
write-append /etc/rc.d/rc.local "mkdir -p /config\n"
write-append /etc/rc.d/rc.local "mount /dev/sr0 /config\n"
write-append /etc/rc.d/rc.local "test -e /config/eimg-early-script.sh || { umount /config && exit 0 ; }\n"
write-append /etc/rc.d/rc.local "sh -x /config/eimg-early-script.sh\n"
chmod 0755   /etc/rc.d/rc.local

touch /.autorelabel
EOF

packages=qemu-guest-agent
case $eimg_ansible_fix in
  # Fix Ansible issues by default.  That's what we want most of the time.
  yes|"")
    packages=$packages,python3-libselinux
    ;;
esac

eimg-podman-virt-sysprep \
    -a "$opt_image" --network \
    --install $packages \
    --ssh-inject "root:file:$HOME/.ssh/id_rsa.pub"
